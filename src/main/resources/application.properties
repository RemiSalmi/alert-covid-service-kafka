server.port=9000
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true

enable.auto.commit=false
spring.kafka.listener.ack-mode=manual
spring.kafka.bootstrap-servers=${CLOUDKARAFKA_BROKERS}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME}-consumers

spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

keycloak.auth-server-url=${KEYCLOAK_URL}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.resource=${KEYCLOAK_RESOURCE}
keycloak.bearer-only=true
keycloak.ssl-required=none
keycloak.credentials.secret=${KEYCLOAK_SECRET}

keycloak.security-constraints[0].auth-roles[0]=USER
keycloak.security-constraints[0].security-collections[0].patterns[0]=/stream/location/*
keycloak.security-constraints[0].securityCollections[0].methods[0]=GET
keycloak.security-constraints[0].securityCollections[0].methods[1]=PUT
keycloak.security-constraints[0].securityCollections[0].methods[2]=DELETE
keycloak.security-constraints[0].securityCollections[0].methods[3]=PATCH
keycloak.security-constraints[0].securityCollections[0].methods[4]=POST